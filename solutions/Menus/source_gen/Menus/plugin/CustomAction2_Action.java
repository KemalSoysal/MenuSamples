package Menus.plugin;

/*Generated by MPS */

import jetbrains.mps.workbench.action.BaseAction;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;
import javax.swing.Icon;
import jetbrains.mps.workbench.action.ActionAccess;
import com.intellij.openapi.actionSystem.AnActionEvent;
import java.util.Map;
import jetbrains.mps.workbench.ActionPlace;
import jetbrains.mps.ide.actions.MPSCommonDataKeys;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.baseLanguage.logging.runtime.model.LoggingRuntime;
import org.apache.log4j.Level;

public class CustomAction2_Action extends BaseAction {
  private static final Logger LOG = LogManager.getLogger(CustomAction2_Action.class);
  private static final Icon ICON = null;

  public CustomAction2_Action() {
    super("Custom Action 2", "", ICON);
    this.setIsAlwaysVisible(false);
    this.setActionAccess(ActionAccess.UNDO_PROJECT);
  }
  @Override
  public boolean isDumbAware() {
    return true;
  }
  @Override
  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {
    if (!(super.collectActionData(event, _params))) {
      return false;
    }
    {
      ActionPlace p = event.getData(MPSCommonDataKeys.PLACE);
      if (p == null) {
        return false;
      }
    }
    return true;
  }
  @Override
  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {
    LoggingRuntime.logMsgView(Level.INFO, String.format("executed from %s (%s)", event.getPlace(), event.getData(MPSCommonDataKeys.PLACE)), CustomAction2_Action.class, null, null);
  }
}
